- name: Installing python modules
  ansible.builtin.yum:
    name: "{{item}}"
    state: installed
  loop:
    - python3
    - gcc
    - python3-devel

- name: Creating the user {{APPUSER}}
  ansible.builtin.user:
    name: "{{APPUSER}}"
    comment: roboshop service user

- name: Download and extracting
  ansible.builtin.unarchive:
    src: https://github.com/stans-robot-project/{{component}}/archive/main.zip
    dest: /tmp
    remote_src: yes

- name: Cleaning the OLD content
  ansible.builtin.file:
    path: /home/{{APPUSER}}/{{component}}/
    state: absent

- name: Copying files to roboshop home directory
  ansible.builtin.copy:
    src: /tmp/{{component}}-main/
    dest: /home/{{APPUSER}}/{{component}}/
    remote_src: yes
    owner: "{{APPUSER}}"
    group: "{{APPUSER}}"
  register: APPUSER_INFO

- name: Installing python dependencies 
  ansible.builtin.pip:
    requirements: /home/{{APPUSER}}/{{component}}/requirements.txt
    executable: pip3

- name: Test Printout
  ansible.builtin.debug:
    msg: "{{APPUSER_INFO}}"

- name: Replacing UID
  ansible.builtin.lineinfile:
    path: /home/roboshop/{{component}}/{{component}}.ini
    regexp: '^uid'
    line: uid = {{APPUSER_INFO.uid}}

- name: Replacing Group ID
  ansible.builtin.lineinfile:
    path: /home/roboshop/{{component}}/{{component}}.ini
    regexp: '^group'
    line: uid = {{APPUSER_INFO.group}}

- name: Configuring the systemd service file
  ansible.builtin.template:
    src: systemd.service
    dest: /etc/systemd/system/{{component}}.service

- name: Restarting service
  ansible.builtin.service:
    name: payment
    state: restarted
    daemon-reload: true
    enabled: yes
